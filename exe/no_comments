#!/usr/bin/env ruby
# frozen_string_literal: true

require "optparse"
require "no_comments/remover"

options = {}
OptionParser.new do |opts|
  opts.banner = "Usage: no_comments [options]"

  opts.on("-p", "--path PATH", "Path to a .rb file or directory") do |path|
    options[:path] = path
  end

  opts.on("--audit", "Run in audit mode to display comments without modifying files") do
    options[:audit] = true
  end

  opts.on("-d", "--keep-doc-comments", "Preserve documentation comments like @param") do
    options[:keep_doc_comments] = true
  end

  opts.on("-e", "--exclude x,y,z", Array, "Files to exclude when cleaning a directory") do |list|
    options[:exclude] = list
  end
end.parse!

if options[:path]
  begin
    NoComments::Remover.clean(
      options[:path],
      audit: options[:audit],
      keep_doc_comments: options[:keep_doc_comments],
      exclude: options[:exclude] || []
    )
    if options[:audit]
      puts "Audit completed successfully."
    else
      puts "Cleaning completed successfully."
    end
  rescue StandardError => e
    puts "Error: #{e.message}"
  end
else
  puts "Please provide a file or directory with -p."
end
